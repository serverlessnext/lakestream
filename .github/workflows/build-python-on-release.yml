name: Build Python packages on a new release

on:
  release:
    types:
      - created
    branches: [main]

jobs:
  build:
    name: build on ${{ matrix.platform || matrix.os }} (${{ matrix.target }} - ${{ matrix.manylinux || 'auto' }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos]
        target: [x86_64]
        manylinux: [auto]
    steps:
      - uses: actions/checkout@v3

      - name: Get release version
        id: get_version
        run: |
          VERSION=$(echo $GITHUB_REF | sed 's/.*\/v//')
          echo "::set-output name=version::$VERSION"

      - name: Set environment variable for maturin
        run: echo "MATURIN_PROJECT_VERSION=${{ steps.get_version.outputs.version }}" >> $GITHUB_ENV

      - name: Set version in pyproject.toml
        run: |
          if [ "${{ runner.os }}" = "macOS" ]; then
            sed -i "" "s/version = .*/version = \"${MATURIN_PROJECT_VERSION}\"/" lakestream-py/pyproject.toml
            sed -i "" "s/^version = .*/version = \"${MATURIN_PROJECT_VERSION}\"/" lakestream-py/Cargo.toml
          else
            sed -i "s/version = .*/version = \"${MATURIN_PROJECT_VERSION}\"/" lakestream-py/pyproject.toml
            sed -i "s/^version = .*/version = \"${MATURIN_PROJECT_VERSION}\"/" lakestream-py/Cargo.toml
          fi

      - name: Install OpenSSL
        run: |
          if [ "${{ runner.os }}" = "macOS" ]; then
            brew install openssl
            echo "LDFLAGS=-L/usr/local/opt/openssl/lib" >> $GITHUB_ENV
            echo "CPPFLAGS=-I/usr/local/opt/openssl/include" >> $GITHUB_ENV
            echo "PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig" >> $GITHUB_ENV
          else
            sudo apt-get update
            sudo apt-get install -y libssl-dev pkg-config
          fi

      - name: set up python
        uses: actions/setup-python@v3
        with:
          python-version: '3.7'

      - run: pip install -U twine

      - name: build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          rust-toolchain: stable
          working-directory: lakestream-py

      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux || 'auto' }}
          args: --release --out dist --strip --interpreter 3.7 3.8 3.9 3.10 3.11
          rust-toolchain: stable
          working-directory: lakestream-py

      - run: ls -lh lakestream-py/dist/

      - run: twine check --strict lakestream-py/dist/*

      - uses: actions/upload-artifact@v3
        with:
          name: pypi_files
          path: lakestream-py/dist

